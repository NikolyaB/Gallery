// Generated by Dagger (https://dagger.dev).
package com.example.gallery.domain.usecase;

import com.example.gallery.domain.gateway.ImageGateway;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagesUseCase_Factory implements Factory<ImagesUseCase> {
  private final Provider<ImageGateway> imageGatewayProvider;

  public ImagesUseCase_Factory(Provider<ImageGateway> imageGatewayProvider) {
    this.imageGatewayProvider = imageGatewayProvider;
  }

  @Override
  public ImagesUseCase get() {
    return newInstance(imageGatewayProvider.get());
  }

  public static ImagesUseCase_Factory create(Provider<ImageGateway> imageGatewayProvider) {
    return new ImagesUseCase_Factory(imageGatewayProvider);
  }

  public static ImagesUseCase newInstance(ImageGateway imageGateway) {
    return new ImagesUseCase(imageGateway);
  }
}
